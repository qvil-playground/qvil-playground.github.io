{"version":3,"sources":["webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx","webpack:///./node_modules/react-md/lib/Media/index.js"],"names":["PostTags","render","tags","this","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","style","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","label","Component","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","coverHeight","react_default","Card_default","path","raise","gatsby_browser_entry","Media_default","height","paddingBottom","PostCover","postNode","Media","CardTitle_default","title","Buttons_default","raised","secondary","expander","avatar","Avatars_default","icon","FontIcons_default","iconClassName","moment","date","format","config","dateFormat","subtitle","timeToRead","CardText_default","expandable","excerpt","PostListing","getPostList","postList","postEdges","forEach","postEdge","push","node","fields","slug","frontmatter","cover","post","components_PostPreview","React","_this$props","fileEdges","coverClassName","coverNodeList","filter","fileNode","childImageSharp","absolutePath","indexOf","join","length","gatsby_image_default","fluid","outerWrapperClassName","width","coverURL","substring","__PATH_PREFIX__","backgroundImage","queryWrapper","query","data","PostCoverComponent","allFile","edges","_590853412","exports","__esModule","MediaOverlay","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default"],"mappings":"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","file":"3-2436b4e44917a8a2b045.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"gatsby\";\r\nimport Chip from \"react-md/lib/Chips\";\r\nimport \"./PostTags.scss\";\r\n\r\nclass PostTags extends Component {\r\n  render() {\r\n    const { tags } = this.props;\r\n    return (\r\n      <div className=\"post-tag-container\">\r\n        {tags &&\r\n          tags.map(tag => (\r\n            <Link\r\n              key={tag}\r\n              style={{ textDecoration: \"none\" }}\r\n              to={`/tags/${_.kebabCase(tag)}`}\r\n            >\r\n              <Chip label={tag} className=\"post-preview-tags\" />\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostTags;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-md/lib/Cards/Card\";\r\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\r\nimport Button from \"react-md/lib/Buttons\";\r\nimport Avatar from \"react-md/lib/Avatars\";\r\nimport CardText from \"react-md/lib/Cards/CardText\";\r\nimport FontIcon from \"react-md/lib/FontIcons\";\r\nimport { Link } from \"gatsby\";\r\nimport moment from \"moment\";\r\nimport Media, { MediaOverlay } from \"react-md/lib/Media\";\r\nimport PostTags from \"../PostTags\";\r\nimport PostCover from \"../PostCover\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport \"./PostPreview.scss\";\r\n\r\nclass PostPreview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mobile: true\r\n    };\r\n    this.handleResize = this.handleResize.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.handleResize();\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize() {\r\n    if (window.innerWidth >= 640) {\r\n      this.setState({ mobile: false });\r\n    } else {\r\n      this.setState({ mobile: true });\r\n    }\r\n  }\r\n  render() {\r\n    const { postInfo } = this.props;\r\n    const { mobile } = this.state;\r\n    const expand = mobile;\r\n    /* eslint no-undef: \"off\" */\r\n    const coverHeight = mobile ? 162 : 225;\r\n    return (\r\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\r\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.path}>\r\n          <Media style={{ height: coverHeight, paddingBottom: \"0px\" }}>\r\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\r\n            <MediaOverlay>\r\n              <CardTitle title={postInfo.title}>\r\n                <Button raised secondary className=\"md-cell--right\">\r\n                  Read\r\n                </Button>\r\n              </CardTitle>\r\n            </MediaOverlay>\r\n          </Media>\r\n        </Link>\r\n        <CardTitle\r\n          expander={expand}\r\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\r\n          title={`Published on ${moment(postInfo.date).format(\r\n            config.dateFormat\r\n          )}`}\r\n          subtitle={`${postInfo.timeToRead} min read`}\r\n        />\r\n\r\n        <CardText expandable={expand}>\r\n          {postInfo.excerpt}\r\n          <PostTags tags={postInfo.tags} />\r\n        </CardText>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostPreview;\r\n","import React from \"react\";\r\nimport PostPreview from \"../PostPreview\";\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\r\n        <div className=\"md-grid md-cell--8 mobile-fix\">\r\n          {postList.map(post => (\r\n            <PostPreview key={post.title} postInfo={post} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n","import React, { Component } from \"react\";\r\nimport Img from \"gatsby-image\";\r\nimport path from \"path\";\r\nimport \"./PostCover.scss\";\r\n\r\nclass PostCover extends Component {\r\n  render() {\r\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\r\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\r\n    const coverNodeList = fileEdges.filter(fileNode => {\r\n      if (fileNode.node.childImageSharp === null) return false;\r\n\r\n      if (\r\n        fileNode.node.absolutePath.indexOf(\r\n          path.join(\"/static/assets/\", post.cover)\r\n        ) !== -1\r\n      )\r\n        return true;\r\n\r\n      return false;\r\n    });\r\n\r\n    if (coverNodeList.length === 1) {\r\n      return (\r\n        <Img\r\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\r\n          outerWrapperClassName={coverClassName}\r\n          style={{ height: coverHeight, width: \"100%\" }}\r\n        />\r\n      );\r\n    }\r\n\r\n    /* eslint no-undef: \"off\" */\r\n    const coverURL =\r\n      post.cover.substring(0, 1) === \"/\"\r\n        ? __PATH_PREFIX__ + post.cover\r\n        : post.cover;\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundImage: `url(${coverURL})`,\r\n          height: `${coverHeight}px`\r\n        }}\r\n        className={coverClassName}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostCover;\r\n","import React, { Component } from \"react\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport PostCover from \"./PostCoverComponent\";\r\n\r\nclass queryWrapper extends Component {\r\n  render() {\r\n    const { postNode, coverHeight, coverClassName } = this.props;\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n          query CoverQuery {\r\n            allFile {\r\n              edges {\r\n                node {\r\n                  id\r\n                  absolutePath\r\n                  childImageSharp {\r\n                    id\r\n                    resolutions {\r\n                      base64\r\n                      tracedSVG\r\n                      aspectRatio\r\n                      width\r\n                      height\r\n                      src\r\n                      srcSet\r\n                      srcWebp\r\n                      srcSetWebp\r\n                      originalName\r\n                    }\r\n                    internal {\r\n                      contentDigest\r\n                      type\r\n                      owner\r\n                    }\r\n                    fluid(maxWidth: 1240) {\r\n                      ...GatsbyImageSharpFluid\r\n                      originalName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `}\r\n        render={data => (\r\n          <PostCover\r\n            fileEdges={data.allFile.edges}\r\n            postNode={postNode}\r\n            coverHeight={coverHeight}\r\n            coverClassName={coverClassName}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default queryWrapper;\r\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;"],"sourceRoot":""}