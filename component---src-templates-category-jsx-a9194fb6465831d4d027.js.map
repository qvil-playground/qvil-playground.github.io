{"version":3,"sources":["webpack:///./src/templates/category.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_4__","location","title","charAt","toUpperCase","slice","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","config","siteTitle","rel","href","siteUrl","_components_PostListing__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery"],"mappings":"yQAOqBA,4FACnBC,OAAA,WAAS,IACCC,EAAaC,KAAKC,MAAMC,YAAxBH,SACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,SAAUX,KAAKC,MAAMU,SACrBC,MAAOb,EAASc,OAAO,GAAGC,cAAgBf,EAASgB,MAAM,IAEzDR,EAAAC,EAAAC,cAAA,OAAKO,UAAU,sBACbT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAAA,mCACyBV,EADzB,OACwCmB,IAAOC,WAE/CZ,EAAAC,EAAAC,cAAA,QACEW,IAAI,YACJC,KAASH,IAAOI,QAAZ,eAAkCvB,KAG1CQ,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAapB,UAAWA,UAnBYqB,IAAMC,WA0BvCC,EAAS","file":"component---src-templates-category-jsx-a9194fb6465831d4d027.js","sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport PostListing from \"../components/PostListing\";\r\nimport Layout from \"../layout\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nexport default class CategoryTemplate extends React.Component {\r\n  render() {\r\n    const { category } = this.props.pageContext;\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    return (\r\n      <Layout\r\n        location={this.props.location}\r\n        title={category.charAt(0).toUpperCase() + category.slice(1)}\r\n      >\r\n        <div className=\"category-container\">\r\n          <Helmet>\r\n            <title>\r\n              {`Posts in category \"${category}\" | ${config.siteTitle}`}\r\n            </title>\r\n            <link\r\n              rel=\"canonical\"\r\n              href={`${config.siteUrl}/categories/${category}`}\r\n            />\r\n          </Helmet>\r\n          <PostListing postEdges={postEdges} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query CategoryPage($category: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [fields___date], order: DESC }\r\n      filter: { frontmatter: { category: { eq: $category } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}